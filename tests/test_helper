#!/bin/sh

rm -f core*
ulimit -c unlimited

check_corefile() {
    if test -n "$(find . -maxdepth 1 -name 'core*' -print -quit)"; then
        echo "Found corefile, trying to get stack trace."
        gdb --batch --quiet -ex "thread apply all bt full" -ex "quit" .libs/lt-test_pac core*
        rm core*
    fi
}

test_proxy() {
    _pacfile="$1"
    _url="$2"
    _host="$3"
    _expected_proxy="$4"
    _res=$(./test_pac "$_pacfile" $_url $_host)
    if [ "$_res" != "$_expected_proxy" ]; then
        echo "FAILED:" $_res "!=" $_expected_proxy
        check_corefile
        RETVAL=1
    else
        echo "OK:" $_url $_host "->" $_res
    fi
}

test_error() {
    _pacfile="$1"
    _url="$2"
    _host="$3"
    _expected_error="$4"
    _res=$(./test_pac "$_pacfile" $_url $_host 2>&1 | grep "$_expected_error")
    if [ -z "$_res" ]; then
        echo "FAILED: expected error message \"$_expected_error\""
        check_corefile
        RETVAL=1
    else
        echo "OK:" $_url $_host "->" $_res
    fi
}
